Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              led.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              timer.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
LOAD timer.o
LOAD pwm.o
LOAD led.o
LOAD programm02.o
LOAD lcd.o
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x9a0
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092      0x1a4 timer.o
                0x0000000000000092                __vector_5
                0x00000000000000e8                timer_init
                0x000000000000013c                timer_get
                0x00000000000001b6                timer_wait
 .text          0x0000000000000236       0xcc pwm.o
                0x0000000000000236                pwm_init
                0x00000000000002e4                set_ocr
 .text          0x0000000000000302      0x22c led.o
                0x0000000000000302                led_init
                0x00000000000003d6                led_on
                0x0000000000000448                led_off
                0x00000000000004bc                led_toggle
 .text          0x000000000000052e       0x2e programm02.o
                0x000000000000052e                init
                0x000000000000054c                main
 .text          0x000000000000055c      0x440 lcd.o
                0x000000000000055c                lcd_set_contrast
                0x0000000000000576                lcd_init
                0x000000000000069e                lcd_init_write
                0x00000000000007aa                lcd_write_data
                0x0000000000000878                lcd_write_cmd
 .text          0x000000000000099c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x000000000000099c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000099c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x000000000000099c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000099c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000099c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000099c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x000000000000099c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000099c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x000000000000099c                exit
                0x000000000000099c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000099c        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000009a0                _etext = .

.data           0x0000000000800060       0x32 load address 0x00000000000009a0
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 timer.o
 .data          0x0000000000800060        0x0 pwm.o
 .data          0x0000000000800060       0x19 led.o
 .data          0x0000000000800079        0x0 programm02.o
 .data          0x0000000000800079       0x19 lcd.o
                0x000000000080008d                wait_long
                0x000000000080008e                wait_short
                0x000000000080008f                zustand
                0x0000000000800090                init_mode
                0x0000000000800091                pwm_standard
 .data          0x0000000000800092        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800092        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800092        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800092                . = ALIGN (0x2)
                0x0000000000800092                _edata = .
                0x0000000000800092                PROVIDE (__data_end, .)

.bss            0x0000000000800092       0x52
                0x0000000000800092                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800092        0x4 timer.o
 .bss           0x0000000000800096        0x0 pwm.o
 .bss           0x0000000000800096        0x0 led.o
 .bss           0x0000000000800096       0x31 programm02.o
 .bss           0x00000000008000c7       0x1d lcd.o
 .bss           0x00000000008000e4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x00000000008000e4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000008000e4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000e4        0x0 programm02.o
                0x00000000008000e4                PROVIDE (__bss_end, .)
                0x00000000000009a0                __data_load_start = LOADADDR (.data)
                0x00000000000009d2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000e4        0x0
                0x00000000008000e4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000e4                PROVIDE (__noinit_end, .)
                0x00000000008000e4                _end = .
                0x00000000008000e4                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x117c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc      0x4f8 timer.o
                                        0x504 (size before relaxing)
 .stab          0x0000000000000bc4      0x324 led.o
                                        0x4ec (size before relaxing)
 .stab          0x0000000000000ee8      0x294 programm02.o
                                        0x45c (size before relaxing)

.stabstr        0x0000000000000000      0xa63
 *(.stabstr)
 .stabstr       0x0000000000000000      0xa63 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(programm02.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__bss_end                                         /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                                                  lcd.o
                                                  programm02.o
                                                  timer.o
__do_copy_data                                    /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                                                  lcd.o
                                                  led.o
__heap_end                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__init                                            /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__stack                                           /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_1                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_10                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_11                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_12                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_13                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_14                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_15                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_16                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_17                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_18                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_19                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_2                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_20                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_3                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_4                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_5                                        timer.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_6                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_7                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_8                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_9                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vector_default                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
__vectors                                         /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
_exit                                             /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
init                                              programm02.o
init_mode                                         lcd.o
                                                  programm02.o
lcd_init                                          lcd.o
                                                  programm02.o
lcd_init_write                                    lcd.o
lcd_set_contrast                                  lcd.o
lcd_write_cmd                                     lcd.o
lcd_write_data                                    lcd.o
led_init                                          led.o
                                                  programm02.o
led_off                                           led.o
led_on                                            led.o
                                                  lcd.o
led_toggle                                        led.o
main                                              programm02.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
pwm_init                                          pwm.o
                                                  programm02.o
pwm_standard                                      lcd.o
                                                  programm02.o
set_ocr                                           pwm.o
                                                  lcd.o
timer_get                                         timer.o
timer_init                                        timer.o
                                                  programm02.o
timer_wait                                        timer.o
                                                  lcd.o
wait_long                                         lcd.o
                                                  programm02.o
wait_short                                        lcd.o
                                                  programm02.o
zustand                                           lcd.o
                                                  programm02.o
